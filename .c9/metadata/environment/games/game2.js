{"filter":false,"title":"game2.js","tooltip":"/games/game2.js","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":117,"column":1},"action":"insert","lines":["var myGamePiece;","var myObstacles = [];","var myScore;","","function startGame() {","    myGamePiece = new component(30, 30, \"red\", 10, 120);","    myGamePiece.gravity = 0.05;","    myScore = new component(\"30px\", \"Consolas\", \"black\", 280, 40, \"text\");","    myGameArea.start();","}","","var myGameArea = {","    canvas : document.createElement(\"canvas\"),","    start : function() {","        this.canvas.width = 480;","        this.canvas.height = 270;","        this.context = this.canvas.getContext(\"2d\");","        document.body.insertBefore(this.canvas, document.body.childNodes[0]);","        this.frameNo = 0;","        updateGameArea();","        },","    clear : function() {","        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);","    }","}","","function component(width, height, color, x, y, type) {","    this.type = type;","    this.score = 0;","    this.width = width;","    this.height = height;","    this.speedX = 0;","    this.speedY = 0;    ","    this.x = x;","    this.y = y;","    this.gravity = 0;","    this.gravitySpeed = 0;","    this.update = function() {","        ctx = myGameArea.context;","        if (this.type == \"text\") {","            ctx.font = this.width + \" \" + this.height;","            ctx.fillStyle = color;","            ctx.fillText(this.text, this.x, this.y);","        } else {","            ctx.fillStyle = color;","            ctx.fillRect(this.x, this.y, this.width, this.height);","        }","    }","    this.newPos = function() {","        this.gravitySpeed += this.gravity;","        this.x += this.speedX;","        this.y += this.speedY + this.gravitySpeed;","        this.hitBottom();","    }","    this.hitBottom = function() {","        var rockbottom = myGameArea.canvas.height - this.height;","        if (this.y > rockbottom) {","            this.y = rockbottom;","            this.gravitySpeed = 0;","        }","    }","    this.crashWith = function(otherobj) {","        var myleft = this.x;","        var myright = this.x + (this.width);","        var mytop = this.y;","        var mybottom = this.y + (this.height);","        var otherleft = otherobj.x;","        var otherright = otherobj.x + (otherobj.width);","        var othertop = otherobj.y;","        var otherbottom = otherobj.y + (otherobj.height);","        var crash = true;","        if ((mybottom < othertop) || (mytop > otherbottom) || (myright < otherleft) || (myleft > otherright)) {","            crash = false;","        }","        return crash;","    }","}","","function updateGameArea() {","    var x, height, gap, minHeight, maxHeight, minGap, maxGap;","    for (i = 0; i < myObstacles.length; i += 1) {","        if (myGamePiece.crashWith(myObstacles[i])) {","            return;","        } ","    }","    myGameArea.clear();","    myGameArea.frameNo += 1;","    if (myGameArea.frameNo == 1 || everyinterval(150)) {","        x = myGameArea.canvas.width;","        minHeight = 20;","        maxHeight = 200;","        height = Math.floor(Math.random()*(maxHeight-minHeight+1)+minHeight);","        minGap = 50;","        maxGap = 200;","        gap = Math.floor(Math.random()*(maxGap-minGap+1)+minGap);","        myObstacles.push(new component(10, height, \"green\", x, 0));","        myObstacles.push(new component(10, x - height - gap, \"green\", x, height + gap));","    }","    for (i = 0; i < myObstacles.length; i += 1) {","        myObstacles[i].x += -1;","        myObstacles[i].update();","    }","    myScore.text=\"SCORE: \" + myGameArea.frameNo;","    myScore.update();","    myGamePiece.newPos();","    myGamePiece.update();","}","","function everyinterval(n) {","    if ((myGameArea.frameNo / n) % 1 == 0) {return true;}","    return false;","}","","function accelerate(n) {","    if (!myGameArea.interval) {myGameArea.interval = setInterval(updateGameArea, 20);}","","    myGamePiece.gravity = n;","}"],"id":1}],[{"start":{"row":12,"column":37},"end":{"row":12,"column":43},"action":"remove","lines":["canvas"],"id":2},{"start":{"row":12,"column":37},"end":{"row":12,"column":38},"action":"insert","lines":["g"]},{"start":{"row":12,"column":38},"end":{"row":12,"column":39},"action":"insert","lines":["a"]},{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"insert","lines":["m"]},{"start":{"row":12,"column":40},"end":{"row":12,"column":41},"action":"insert","lines":["e"]},{"start":{"row":12,"column":41},"end":{"row":12,"column":42},"action":"insert","lines":["2"]}]]},"ace":{"folds":[],"scrolltop":60,"scrollleft":0,"selection":{"start":{"row":12,"column":42},"end":{"row":12,"column":42},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":129,"mode":"ace/mode/javascript"}},"timestamp":1572112150880,"hash":"f7ca7ad1a88266b18c9a9a032fddff2107c900bc"}